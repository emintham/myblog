---
// src/components/Navigation.astro
import { SITE_TITLE, ADMIN_PATH_PREFIX } from "../siteConfig.ts";

const baseNavLinks = [
  { href: "/", label: "Home" },
  { href: "/book-notes", label: "Book Notes" },
  { href: "/tags", label: "Tags" },
  { href: "/series", label: "Series" },
  { href: "/about", label: "About" },
];

// Add admin link in development mode
const devLinks = [
  { href: "/admin/manage-posts", label: "Manage" },
  { href: "/admin/analyze", label: "Analyze" },
];
const navLinks = import.meta.env.DEV
  ? [...baseNavLinks, ...devLinks]
  : baseNavLinks;

function isActiveLink(href: string, pathname: string): boolean {
  return pathname === href || (href !== "/" && pathname.startsWith(href + "/"));
}

// Determine if we're on an admin page for initial rendering
const isAdminPage = Astro.url.pathname.startsWith(ADMIN_PATH_PREFIX);
const initialContext = isAdminPage ? "author" : "reader";
---

<nav data-initial-context={initialContext}>
  <div class="nav-container">
    <div class="blog-title">
      <a href="/">{SITE_TITLE}</a>
    </div>
    <ul class="nav-links">
      {
        navLinks.map((link) => {
          const isAdminLink = link.href.startsWith(ADMIN_PATH_PREFIX);
          const shouldHide =
            initialContext === "author" ? !isAdminLink : isAdminLink;

          return (
            <li style={shouldHide ? "display: none;" : ""}>
              <a
                href={link.href}
                class:list={{
                  "is-active": isActiveLink(link.href, Astro.url.pathname),
                }}
              >
                {link.label}
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>
</nav>

<style>
  nav {
    padding: 1.5rem 0;
    border-bottom: 1px solid var(--color-border-subtle, #e0e0e0);
    margin-bottom: 1rem;
  }

  .nav-container {
    max-width: var(--content-max-width, 720px);
    margin: 0 auto;
    padding: 0 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .blog-title {
    margin-bottom: 1rem;
  }

  .blog-title a {
    font-family: var(--font-display-title);
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-text);
    text-decoration: none;
    transition: color 0.2s ease-in-out;
    letter-spacing: 0.01em;
    text-transform: uppercase;
  }

  .blog-title a:hover {
    color: var(--color-accent);
  }

  .nav-links {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: space-between;
    width: 100%;
    flex-wrap: wrap;
  }

  .nav-links li {
    text-align: center;
    transition: opacity 0.2s ease-in-out;
  }

  .nav-links li a {
    font-family: var(--font-sans);
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-meta);
    text-decoration: none;
    padding: 0.5rem 0.1rem;
    display: inline-block;
    transition: color 0.2s ease-in-out;
    border-bottom: 2px solid transparent;
  }

  .nav-links li a:hover,
  .nav-links li a.is-active {
    color: var(--color-text);
    border-bottom-color: var(--color-accent);
  }

  /* Responsive adjustments */
  @media (max-width: 480px) {
    .blog-title a {
      font-size: 1.8rem;
    }
    .nav-links {
      justify-content: space-around;
    }
    .nav-links li a {
      font-size: 0.8rem;
      padding: 0.5rem 0.2rem;
      letter-spacing: 0.04em;
    }
  }
</style>
