---
// src/components/BookNotePreview.astro
// Displays a preview card for book notes in lists.
import ResponsiveImage from "./ResponsiveImage.astro"; // Import the ResponsiveImage component
import PostMeta from "./PostMeta.astro";
import PreviewLinkWrapper from "./PreviewLinkWrapper.astro";

interface Props {
  post: {
    slug: string;
    data: {
      title: string; // Title of the review/note
      pubDate: Date;
      description?: string; // Description of the review/note
      author: string; // Author of the review/note
      postType?: string;

      // Book note specific fields
      bookTitle?: string;
      bookAuthor?: string;
      bookCover?: { imageName: string; alt: string }; // For the book's cover image
    };
  };
}

const { post } = Astro.props;
const frontmatter = post.data;

// Determine the link for the preview.
const isLink = frontmatter.postType !== "fleeting";
const href = isLink ? `/blog/${post.slug}/` : null;

// Define widths for preview images - these should be smaller than detail page images
const previewImageWidths = [100, 150, 200];
const previewDefaultWidth = previewImageWidths.includes(100)
  ? 100
  : previewImageWidths[0];
---

<article class="book-note-preview post-preview">
  <div class="preview-grid">
    {
      frontmatter.bookCover && frontmatter.bookCover.imageName && (
        <div class="cover-container">
          <PreviewLinkWrapper
            isLink={isLink}
            href={href}
            ariaLabel={`Read notes on ${frontmatter.bookTitle || frontmatter.title}`}
          >
            <ResponsiveImage
              imageName={frontmatter.bookCover.imageName}
              alt={frontmatter.bookCover.alt}
              widths={previewImageWidths}
              originalImageWidth={frontmatter.bookCover.originalWidth}
              sizesAttr="(max-width: 480px) 25vw, 100px"
              imgClass="cover-image"
              defaultWidth={previewDefaultWidth}
              loading="lazy"
            />
          </PreviewLinkWrapper>
        </div>
      )
    }
    <div
      class="info-container"
      class:list={{ "no-cover": !frontmatter.bookCover?.imageName }}
    >
      <h3 class="preview-title">
        <PreviewLinkWrapper isLink={isLink} href={href}>
          {frontmatter.title}
        </PreviewLinkWrapper>
      </h3>

      {
        frontmatter.bookTitle && (
          <p class="book-title-author">
            {frontmatter.bookTitle} by{" "}
            {frontmatter.bookAuthor || "Unknown Author"}
          </p>
        )
      }

      <PostMeta pubDate={frontmatter.pubDate} author={frontmatter.author} />

      {
        frontmatter.description && (
          <p class="description">{frontmatter.description}</p>
        )
      }

      {
        isLink && frontmatter.postType !== "fleeting" && (
          <a href={href} class="read-more">
            Read Notes &rarr;
          </a>
        )
      }
    </div>
  </div>
</article>

<style>
  .book-note-preview .preview-grid {
    display: grid;
    grid-template-columns: auto 1fr; /* Cover auto, info takes rest */
    gap: 1.5rem; /* Space between cover and info */
    align-items: center; /* Align items to the center */
  }

  .book-note-preview .cover-container {
    width: 100px; /* Adjust width as desired for preview */
    flex-shrink: 0;
  }

  /* The .cover-image class will style the <img> tag inside <picture> */
  /* Using :global as ResponsiveImage is a separate component */
  :global(.book-note-preview .cover-image) {
    width: 100%;
    height: auto;
    border-radius: 3px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.07);
    transition: transform 0.2s ease-in-out;
    display: block;
  }
  .book-note-preview .cover-container a:hover :global(.cover-image) {
    transform: scale(1.03);
  }

  .book-note-preview .info-container {
    /* Takes remaining space */
  }
  .book-note-preview .info-container.no-cover {
    /* If there's no cover, let info take full width */
    grid-column: 1 / -1;
  }

  .book-note-preview .preview-title {
    /* h3 */
    font-size: 1.6rem; /* Specific font size */
    font-weight: 600; /* Specific font weight */
    margin-bottom: 0.25rem; /* Specific margin */
  }

  .book-note-preview .book-title-author {
    font-family: var(--font-sans);
    font-size: 1rem;
    font-weight: 500;
    color: var(--color-text);
    margin-top: 0;
    margin-bottom: 0.5rem;
  }

  .book-note-preview .meta {
    /* Styles inherited from global .meta */
  }

  .book-note-preview .description {
    font-family: var(--font-serif);
    font-size: 0.95rem;
    line-height: 1.6;
    color: var(--color-text);
    margin-bottom: 1rem;
    /* Limit lines for preview */
    display: -webkit-box;
    -webkit-line-clamp: 3; /* Show 3 lines */
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .book-note-preview .read-more {
    font-size: 0.85rem; /* Specific font-size */
    margin-top: 0.25rem; /* Specific margin */
  }

  /* Mobile adjustments */
  @media (max-width: 600px) {
    .book-note-preview .preview-grid {
      grid-template-columns: 1fr; /* Stack cover and info */
      gap: 1rem;
    }
    .book-note-preview .cover-container {
      width: 120px; /* Or a percentage, or max-width */
      margin: 0 auto 1rem auto; /* Center the cover when stacked */
    }
    .book-note-preview .info-container {
      text-align: center; /* Center text when stacked */
    }
    .book-note-preview .description {
      -webkit-line-clamp: 2; /* Show fewer lines on mobile */
    }
    .book-note-preview .preview-title {
      /* h3 */
      /* Potentially adjust title size for mobile if needed */
    }
  }
</style>
