---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { generateSlug } from "../../utils/slugify";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", ({data}) => {
    // Filter out drafts for path generation in production
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
const frontmatter = entry.data;
// remarkPluginFrontmatter contains data from the Markdown frontmatter after rendering

// Variables for the series link
const seriesName = frontmatter.series;
let seriesLinkPath = null;
if (seriesName && typeof seriesName === 'string') {
  const seriesSlug = generateSlug(seriesName);
  seriesLinkPath = `/series/${seriesSlug}/`;
}

const postTags = (frontmatter.tags && Array.isArray(frontmatter.tags) && frontmatter.tags.length > 0)
  ? frontmatter.tags.map(tag => {
      const tagName = tag.trim(); // Trim whitespace from tag name
      return {
        name: tagName, // Original name for display
        href: `/tags/${generateSlug(tagName)}/` // Link to the tag page
      };
    }).filter(tag => tag.name) // Ensure no empty tags after trimming
  : [];
---

<BaseLayout title={frontmatter.title} description={frontmatter.description}>
  <article class="blog-post">
    <header class="post-header">
      <h1>{frontmatter.title}</h1>
      <p class="meta">
        Published on <time datetime={frontmatter.pubDate.toISOString()}>
          {
            new Date(frontmatter.pubDate).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        by {frontmatter.author}
        {seriesName && seriesLinkPath && (
          <span class="series-meta-inline">
            &bull; In series: <a href={seriesLinkPath} aria-label={`Read all posts in the series: ${seriesName}`}>{seriesName}</a>
          </span>
        )}
      </p>
    </header>
    <div class="post-content">
      <Content />
    </div>

    {/* Consolidated Tags and Series Footer */}
    {(postTags.length > 0 || (seriesLinkPath && seriesName)) && (
      <footer class="post-meta-footer">
        {seriesLinkPath && seriesName && (
          <div class="meta-item series-meta-item">
            <p class="series-statement"> {/* Changed to p for semantic block content */}
              This post is part of <a href={seriesLinkPath} aria-label={`View all posts in the "${seriesName}" series`}>{seriesName}</a>.
            </p>
          </div>
        )}

        {postTags.length > 0 && (
          <div class="meta-item tags-meta-item">
            <span class="meta-label">TAGS</span>
            <ul class="tags-list-style">
              {postTags.map(tag => (
                <li>
                  <a href={tag.href}>#{tag.name}</a>
                </li>
              ))}
            </ul>
          </div>
        )}
      </footer>
    )}
  </article>
</BaseLayout>

<style>
  .blog-post {
    /* Styles for single post layout */
  }
  .post-header {
    text-align: left; /* Or center for a more formal Kinfolk feel */
    margin-bottom: 3rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee; /* Very subtle */
  }
  .post-header h1 {
    font-size: 2.8rem; /* Larger for post title */
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }
  .post-header .meta {
    font-family: var(--font-sans);
    font-size: 0.9rem;
    color: var(--color-meta);
  }

  .post-content {
    /* Typography here will be largely inherited from global.css */
  }

  /* Deeper styling for elements within .post-content if needed */
  .post-content h2 {
    margin-top: 2.5em;
    margin-bottom: 1em;
    /* font-weight: normal; /* Lighter headings in body */
  }
  .post-content img {
    /* Minimal images, but style them well if used */
    max-width: 100%;
    height: auto;
    margin: 2em 0;
    border-radius: 4px; /* Subtle rounding */
    display: block;
  }
  .post-content blockquote {
    border-left: 3px solid var(--color-accent);
    padding-left: 1.5em;
    margin-left: 0;
    margin-right: 0;
    font-style: italic;
    color: var(--color-meta);
  }


  .post-meta-footer {
    margin-top: 3.5rem; /* Space above the entire meta footer */
    padding-top: 1.5rem; /* Space below the border-top */
    border-top: 1px solid var(--color-border-subtle); /* Single border for the whole section */
    font-family: var(--font-sans); /* Open Sans */
    font-size: 0.9rem; /* Base size for this section */
  }

  .meta-item {
    margin-bottom: 1.25rem; /* Space between "Tags" block and "Series" block if both appear */
  }
  .meta-item:last-child {
    margin-bottom: 0;
  }

  .meta-label {
    display: block; /* Label on its own line */
    font-weight: 600;
    color: var(--color-meta); /* Softer color for the label */
    margin-bottom: 0.6em;
    font-size: 0.8rem; /* Smaller label text */
    text-transform: uppercase;
    letter-spacing: 0.075em; /* Kinfolk-style letter spacing */
  }

  .tags-list-style { /* For the list of tags */
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex; /* Tags flow inline */
    flex-wrap: wrap; /* Allow wrapping */
    gap: 0.3em 0.8em; /* Vertical and horizontal gap between tags */
  }

  .tags-list-style li {
    /* Individual list item styling if needed beyond gap */
  }

  .tags-list-style a {
    color: var(--color-accent);
    text-decoration: none;
    font-size: 0.9rem; /* Match base size of section */
  }

  .tags-list-style a:hover {
    text-decoration: underline;
    color: var(--color-text);
  }

  .series-statement { /* For the "This post is part of..." line */
    margin: 0; /* Remove default p margin */
    color: var(--color-text); /* Or var(--color-meta) if you want it more subdued */
    line-height: 1.6;
    font-size: 0.9rem; /* Match base size of section */
  }

  .series-statement a {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600; /* Make series name stand out */
  }

  .series-statement a:hover {
    text-decoration: underline;
    color: var(--color-text);
  }
</style>
