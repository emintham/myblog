---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection, getEntry } from "astro:content";
import { generateSlug } from "../../utils/slugify";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog", ({data}) => {
    // Filter out drafts for path generation in production
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
// remarkPluginFrontmatter contains data from the Markdown frontmatter after rendering

// Variables for the series link
const seriesName = entry.data.series;
let seriesLinkPath = null;
if (seriesName && typeof seriesName === 'string') {
  const seriesSlug = generateSlug(seriesName);
  seriesLinkPath = `/series/${seriesSlug}/`;
}
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <article class="blog-post">
    <header class="post-header">
      <h1>{entry.data.title}</h1>
      <p class="meta">
        Published on <time datetime={entry.data.pubDate.toISOString()}>
          {
            new Date(entry.data.pubDate).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        by {entry.data.author}
        {seriesName && seriesLinkPath && (
          <span class="series-meta-inline">
            &bull; In series: <a href={seriesLinkPath} aria-label={`Read all posts in the series: ${seriesName}`}>{seriesName}</a>
          </span>
        )}
      </p>
    </header>
    <div class="post-content">
      <Content />
    </div>

    {/* Conditionally render the series link footer */}
    {seriesLinkPath && seriesName && (
      <footer class="post-series-navigation">
        <p>
          This post is part of the series:
          <a href={seriesLinkPath} aria-label={`View all posts in the "${seriesName}" series`}>
            {seriesName}
          </a>.
        </p>
      </footer>
    )}
  </article>
</BaseLayout>

<style>
  .blog-post {
    /* Styles for single post layout */
  }
  .post-header {
    text-align: left; /* Or center for a more formal Kinfolk feel */
    margin-bottom: 3rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee; /* Very subtle */
  }
  .post-header h1 {
    font-size: 2.8rem; /* Larger for post title */
    margin-bottom: 0.5rem;
    line-height: 1.2;
  }
  .post-header .meta {
    font-family: var(--font-sans);
    font-size: 0.9rem;
    color: var(--color-meta);
  }

  .post-content {
    /* Typography here will be largely inherited from global.css */
  }

  /* Deeper styling for elements within .post-content if needed */
  .post-content h2 {
    margin-top: 2.5em;
    margin-bottom: 1em;
    /* font-weight: normal; /* Lighter headings in body */
  }
  .post-content img {
    /* Minimal images, but style them well if used */
    max-width: 100%;
    height: auto;
    margin: 2em 0;
    border-radius: 4px; /* Subtle rounding */
    display: block;
  }
  .post-content blockquote {
    border-left: 3px solid var(--color-accent);
    padding-left: 1.5em;
    margin-left: 0;
    margin-right: 0;
    font-style: italic;
    color: var(--color-meta);
  }

  /* Styles for the new series link section at the bottom */
  .post-series-navigation {
    margin-top: 3.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--color-border-subtle);
    text-align: center;
    font-family: var(--font-sans);
    font-size: 0.95rem;
    color: var(--color-meta);
  }
  .post-series-navigation p {
    margin: 0;
  }
  .post-series-navigation a {
    color: var(--color-accent);
    text-decoration: none;
    font-weight: 600;
  }
  .post-series-navigation a:hover {
    text-decoration: underline;
    color: var(--color-text);
  }
</style>
